# Generated by Django 5.2 on 2025-06-26 13:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mylist', '0013_alter_bauteil_laufzeit_da_alter_bauteil_laufzeit_hd_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beleuchtung',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bereich', models.CharField(choices=[('buero', 'Büro'), ('wohnen', 'Wohnen'), ('sanitaer', 'Sanitär'), ('verkehr', 'Verkehr')], help_text='Nutzungsbereich', max_length=10)),
                ('beleuchtungsart', models.CharField(max_length=100)),
                ('regelungsart', models.CharField(max_length=100)),
                ('e_soll', models.FloatField(help_text='Soll-Beleuchtungsstärke in W/m²')),
                ('laufzeit_hd', models.FloatField(help_text='Betriebsstunden pro Tag')),
                ('laufzeit_da', models.FloatField(help_text='Betriebstage pro Jahr')),
            ],
        ),
        migrations.CreateModel(
            name='Waermequelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='z. B. ‚Quelle 1‘', max_length=50)),
                ('anzahl', models.IntegerField()),
                ('leistung_kw', models.FloatField(help_text='Nennleistung in kW')),
                ('betrieb_hd', models.FloatField(help_text='Betriebsstunden pro Tag')),
                ('betrieb_da', models.FloatField(help_text='Betriebstage pro Jahr')),
            ],
        ),
        migrations.CreateModel(
            name='GwpEingabe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variante', models.CharField(choices=[('300', 'Bauteile 300'), ('400', 'Bauteile 400')], max_length=3)),
                ('menge', models.FloatField(help_text='Menge in m² oder m³')),
                ('spez_co2', models.FloatField(help_text='spezifische CO₂-Emissionen')),
                ('gebaeude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mylist.gebaeude')),
            ],
        ),
        migrations.CreateModel(
            name='SonneneintragsParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kritischer_raum', models.BooleanField(default=False, help_text='Ist ein kritischer Raum definiert?')),
                ('fassadenorientierung', models.CharField(choices=[('Nord', 'Nord'), ('Ost', 'Ost'), ('Sued', 'Süd'), ('West', 'West')], max_length=5)),
                ('verglasungsart', models.CharField(choices=[('zweifach', 'Zweifachverglasung'), ('dreifach', 'Dreifachverglasung')], max_length=10)),
                ('passive_kuehlung', models.BooleanField(default=False, help_text='Passive Kühlung vorhanden?')),
                ('fensterneigung', models.FloatField(help_text='Neigungswinkel der Fenster (°)')),
                ('gebaeude', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mylist.gebaeude')),
                ('sonnenschutzart', models.ForeignKey(help_text='Aus Tabelle Sonnenschutz-Faktoren', on_delete=django.db.models.deletion.PROTECT, to='mylist.sonnenschutzfaktor')),
            ],
        ),
    ]
